services:
  registry:
    image: registry:latest       # シンプル HTTP レジストリ (latest タグ)
    restart: always              # 自動再起動
    environment:
      REGISTRY_STORAGE: filesystem
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '["*"]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '["GET","OPTIONS"]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '["Authorization","Content-Type"]'
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
    ports:
      - "5000:5000"
    volumes:
      - ./data:/var/lib/registry
    networks:
      - registry-net

  ui:
    build:
      context: ./ui
    image: registry-ui
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - registry
    networks:
      - registry-net

  nginx:
    build:
      context: ./nginx
    image: registry-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - ui
      - registry
    networks:
      - registry-net
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  registry-net:
    driver: bridge
